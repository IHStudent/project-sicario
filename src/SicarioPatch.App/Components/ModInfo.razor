@if (Mod != null)
{
    <Field>
        <FieldLabel>File Name</FieldLabel>
        <TextEdit Disabled="true" @bind-Text="@FileName"/>
        <FieldHelp>This is the name of the actual mod file itself</FieldHelp>
    </Field>
    <Field>
        <FieldLabel>Mod Name</FieldLabel>
        <TextEdit @bind-Disabled="@ReadOnly" @bind-Text="@Mod.Metadata.DisplayName"/>
        <FieldHelp>This can be anything you want and is what's shown to users</FieldHelp>
    </Field>
    <Field>
        <FieldLabel>Mod Group</FieldLabel>
        <TextEdit @bind-Disabled="@ReadOnly" @bind-Text="@Mod.Group"/>
        <FieldHelp>Don't set this unless you know what you're doing!</FieldHelp>
    </Field>
    <Field>
        <FieldLabel>Description</FieldLabel>
        <MemoEdit @bind-Disabled="@ReadOnly" @bind-Text="@Mod.Metadata.Description" Rows="2"/>
    </Field>
    <Divider/>
    <ul class="list-group">
        <li class="list-group-item d-flex justify-content-between align-items-center">
            Files Modified
            <Badge Color="Color.Secondary">@Mod.FilePatches.Count</Badge>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-center">
            Total Patches
            <Badge Color="Color.Secondary">@Mod.FilePatches.Sum(fp => fp.Value.Sum(ps => ps.Patches.Count))</Badge>
        </li>
    </ul>
    <Divider/>
}
@code {

    [Parameter]
    public string FileName { get; set; } = string.Empty;
    
    [Parameter]
    public WingmanMod Mod { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; } = false;

    private bool ShouldDisable
    {
        get => !ReadOnly;
        set => ReadOnly = !value;
    }

}